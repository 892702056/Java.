主要的input类和output类继承Callable<Object>接口，该接口和Runnable相似，但是后者不返回线程结果，而前者可以返回线程结果，利用线程池的管理工具，返回线程的执行结果，修改休眠时间，可以使得某种线程在执行完以后在指定时间内不再争抢cpu的轮转片段，使得其他线程可以进行执行，就比如在output中增加sleep(5)而input中增加sleep(1)，这时候当output执行完以后在很长的时间内都是input在执行，output进入休眠状态不再执行。在休眠时间相同的情况下增加线程数量，扩张线程池的大小，通过多条线程来执行该过程，相当于开了多个进水口和出水口，这时候若休眠时间相同，则某个功能线程数占优，则有更大的概率抢到cpu的时间，从而更多的执行，但是也可以通过休眠时间的长短来进行调节，但是增加了线程数量之后，又有了新的问题，进水500和出水300执行的结果并不是按照理想的状态进行，而是输出了很多零散数字，我想可能是多线程在执行时，cup的多核可以同时处理两个不同的线程，然后同时输出